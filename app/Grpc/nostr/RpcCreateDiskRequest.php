<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

namespace App\Grpc\nostr;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>RpcCreateDiskRequest</code>
 */
class RpcCreateDiskRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional string name = 1;</code>
     */
    protected $name = null;

    /**
     * Generated from protobuf field <code>optional string encryptionKey = 2;</code>
     */
    protected $encryptionKey = null;

    /**
     * Generated from protobuf field <code>optional bool includeEncryptionKeyInUrl = 3;</code>
     */
    protected $includeEncryptionKeyInUrl = null;

    /**
     * Constructor.
     *
     * @param  array  $data  {
     *                       Optional. Data for populating the Message object.
     *
     * @type string $name
     * @type string $encryptionKey
     * @type bool $includeEncryptionKeyInUrl
     *            }
     */
    public function __construct($data = null)
    {
        \App\Grpc\nostr\GPBMetadata\Rpc::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional string name = 1;</code>
     *
     * @return string
     */
    public function getName()
    {
        return isset($this->name) ? $this->name : '';
    }

    public function hasName()
    {
        return isset($this->name);
    }

    public function clearName()
    {
        unset($this->name);
    }

    /**
     * Generated from protobuf field <code>optional string name = 1;</code>
     *
     * @param  string  $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, true);
        $this->name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string encryptionKey = 2;</code>
     *
     * @return string
     */
    public function getEncryptionKey()
    {
        return isset($this->encryptionKey) ? $this->encryptionKey : '';
    }

    public function hasEncryptionKey()
    {
        return isset($this->encryptionKey);
    }

    public function clearEncryptionKey()
    {
        unset($this->encryptionKey);
    }

    /**
     * Generated from protobuf field <code>optional string encryptionKey = 2;</code>
     *
     * @param  string  $var
     * @return $this
     */
    public function setEncryptionKey($var)
    {
        GPBUtil::checkString($var, true);
        $this->encryptionKey = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool includeEncryptionKeyInUrl = 3;</code>
     *
     * @return bool
     */
    public function getIncludeEncryptionKeyInUrl()
    {
        return isset($this->includeEncryptionKeyInUrl) ? $this->includeEncryptionKeyInUrl : false;
    }

    public function hasIncludeEncryptionKeyInUrl()
    {
        return isset($this->includeEncryptionKeyInUrl);
    }

    public function clearIncludeEncryptionKeyInUrl()
    {
        unset($this->includeEncryptionKeyInUrl);
    }

    /**
     * Generated from protobuf field <code>optional bool includeEncryptionKeyInUrl = 3;</code>
     *
     * @param  bool  $var
     * @return $this
     */
    public function setIncludeEncryptionKeyInUrl($var)
    {
        GPBUtil::checkBool($var);
        $this->includeEncryptionKeyInUrl = $var;

        return $this;
    }
}
